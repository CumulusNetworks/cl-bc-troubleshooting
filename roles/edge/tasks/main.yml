- name: Set APT to always use IPv4
  shell: "echo 'Acquire::ForceIPv4 \"true\";' > /etc/apt/apt.conf.d/99force-ipv4"
  tags:
    - install
    - apt
 
- name: install ifenslave package
  apt: name={{ item }} update_cache=yes
  with_items:
    - vlan

- name: Add bonding and 8021q module to running kernel config
  command: "{{ item }}"
  with_items:
    - modprobe 8021q
  tags:
    - interfaces

- name: Add bonding and 8021q module to persistent kernel startup
  lineinfile: dest=/etc/modules line={{ item }}
  with_items:
    - 8021q
  tags:
    - interfaces
       
- name: Enable Routing on the FWs
  sysctl: name="net.ipv4.ip_forward" value=1 sysctl_set=yes state=present reload=yes
  tags:
    - quagga
    
- name: Check if iproute is installed
  shell: "dpkg-query -f '${binary:Package}\n' -W"
  register: iproute_installed
  notify: Install iproute for Quagga dependency
  
- name: Install iproute for Quagga dependency
  apt: name=iproute update_cache=yes state=present cache_valid_time=86400
  when: "'iproute' not in iproute_installed"
  tags:
    - quagga
    - install
    
- name: download official quagga deb
  get_url: url=https://github.com/CumulusNetworks/quagga/blob/cm_2.5/debian/release/quagga_0.99.23.1-1+cl2.5_amd64.deb?raw=true dest=/var/www/quagga_2.5.6.deb validate_certs=False
  delegate_to: 127.0.0.1

- name: grab quagga from mgmt server
  get_url: url=http://oob-mgmt-server.lab.local/quagga_2.5.6.deb dest=/root/quagga_2.5.6.deb validate_certs=False

- name: Install Quagga
  apt: deb=/root/quagga_2.5.6.deb

- name: print ansible_lsb.id result
  debug: var=ansible_lsb.id
  
- name: copy interfaces
  copy: src=scenario{{s}}/{{ansible_hostname}}/interfaces dest=/etc/network/
  
- name: copy Quagga daemons
  copy: src=scenario{{s}}/{{ansible_hostname}}/daemons dest=/etc/quagga/
  
- name: copy Quagga conf
  copy: src=scenario{{s}}/{{ansible_hostname}}/Quagga.conf dest=/etc/quagga/

- name: reload quagga
  service: name=quagga state=restarted

- name: Force Interfaces Down
  command: ifdown {{item}}
  with_items:
    - lo
    - eth1
    - eth2
    
- name: Force Interfaces Up
  command: ifup {{item}}
  with_items:
    - lo
    - eth1
    - eth2
  
- name: Check if default for eth0 is installed
  shell: "ip route show"
  register: default_installed
  notify: delete default if everything else worked and we are running vagrant
  tags:
    - remove_default
      
- name: delete default if everything else worked and we are running vagrant
  command: ip route del default via 192.168.0.254
  when: default_installed is defined and "default via 192.168.0.254 dev eth0" in default_installed.stdout  
  tags:
    - remove_default