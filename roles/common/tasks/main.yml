#- name: print ansible_lsb.id result
#  debug: var=ansible_lsb.id
- name: Set proxy to oob-mgmt-server
  lineinfile: dest=/etc/apt/apt.conf.d/69apt-proxy line='Acquire::http::Proxy "http://192.168.0.254:3142";' create=yes
  
- name: copy interfaces
  copy: src=scenario{{s}}/{{ansible_hostname}}/interfaces dest=/etc/network/
  
- name: copy Quagga daemons
  copy: src=scenario{{s}}/{{ansible_hostname}}/daemons dest=/etc/quagga/
  when: '"Cumulus" in ansible_lsb.id'
  
- name: copy Quagga conf
  copy: src=scenario{{s}}/{{ansible_hostname}}/Quagga.conf dest=/etc/quagga/
  when: '"Cumulus" in ansible_lsb.id'

- name: reload networking
  command: ifreload -a
  when: '"Cumulus" in ansible_lsb.id and ansible_lsb.major_release != "3"'

- name: reload quagga
  service: name=quagga state=restarted
  when: '"Cumulus" in ansible_lsb.id and ansible_lsb.major_release != "3"'

- name: restarts servers with their new configuration
  shell: reboot
  when: '"server" in ansible_hostname'
  
- name: Check if mgmtvrf is installed
  shell: "dpkg-query -f '${binary:Package}\n' -W"
  register: mgmtvrf_installed
  notify: Install mgmtvrf
  when: '"Cumulus" in ansible_lsb.id'  
  
- name: Install mgmtvrf
  apt: name=cl-mgmtvrf update_cache=yes state=present cache_valid_time=86400
  when: "'cl-mgmtvrf' not in mgmtvrf_installed and 'Cumulus' in ansible_lsb.id and '2.5' in ansible_lsb.release" 
      
- name: Check if mgmtvrf is installed
  stat: path=/var/lib/cl-mgmtvrf/mgmtvrf.conf
  register: mgmtvrf
  when: '"Cumulus" in ansible_lsb.id and "2.5" in ansible_lsb.release'  

- name: Setup Mgmtvrf
  command: cl-mgmtvrf -e
  when: 'mgmtvrf is defined and mgmtvrf.stat.exists == False' 
  
- name: Setup (1/3) vrf on eth0 when running CL 3.0
  blockinfile:
    dest: /etc/network/interfaces
    block: |
      auto mgmt
      iface mgmt
      address 127.0.0.1/8
      vrf-table auto
    insertbefore: BOF
  when: 'ansible_lsb.major_release == "3" and "Cumulus" in ansible_lsb.id'

- name: Setup (2/3) vrf on eth0 when running CL 3.0
  lineinfile: dest=/etc/network/interfaces insertafter="^iface eth0 inet dhcp" line="vrf mgmt"
  when: 'ansible_lsb.major_release == "3" and "Cumulus" in ansible_lsb.id'

- name: Reboot (3/3) 3.0 servers for vrf
  shell: reboot
  when: 'ansible_lsb.major_release == "3" and "Cumulus" in ansible_lsb.id'

- name: Wait for servers to come back up
  local_action: wait_for port=22 host="{{ inventory_hostname }}" search_regex=OpenSSH delay=10

- name: Check if default for eth1/eth2 is installed
  shell: "ip route show"
  register: default_installed
  when: "'server' in ansible_hostname"

- name: Delete the default if the eth0 default is still there
  shell: "ip route del default"
  when: "'server' in ansible_hostname and 'default via 192.168.0.254' in default_installed.stdout"    
     
- name: Add Default route if on server01
  lineinfile: dest=/etc/rc.local line="ip route add default nexthop via 172.16.1.1 dev eth1 onlink nexthop via 172.16.1.1 dev eth2 onlink" insertbefore="exit 0"
  when: "'server01' in ansible_hostname and 'nexthop via 172.16.1.1' not in default_installed.stdout"
 
- name: make sure default is present on server01
  command: ip route add default nexthop via 172.16.1.1 dev eth1 onlink nexthop via 172.16.1.1 dev eth2 onlink
  when: "'server01' in ansible_hostname and 'nexthop via 172.16.1.1' not in default_installed.stdout"
     
- name: Add Default route if on server03
  lineinfile: dest=/etc/rc.local line="ip route add default nexthop via 172.16.3.1 dev eth1 onlink nexthop via 172.16.3.1 dev eth2 onlink" insertbefore="exit 0"
  when: "'server03' in ansible_hostname and 'nexthop via 172.16.3.1' not in default_installed.stdout"
 
- name: make sure default is present on server03
  command: ip route add default nexthop via 172.16.3.1 dev eth1 onlink nexthop via 172.16.3.1 dev eth2 onlink
  when: "'server03' in ansible_hostname and 'nexthop via 172.16.3.1' not in default_installed.stdout"

- name: Enable NAT on Vagrant interface for Downstream Hosts
  shell: "{{ item }}"
  with_items:
    - "iptables --flush -t nat"
    - "iptables -t nat -A POSTROUTING -o swp48 -j MASQUERADE"
  when: "'internet' in ansible_hostname"
  
  
  
  